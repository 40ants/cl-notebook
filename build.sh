sbcl --eval '(ql:quickload :cl-notebook)' --eval '(ql:write-asdf-manifest-file "build.manifest")' --eval '(with-open-file (s "build.manifest" :direction :output :if-exists :append) (loop for sys in (list :house :fact-base :cl-notebook) do (format s "~a~%" (merge-pathnames (format nil "~(~a~).asd" sys) (asdf/system:system-source-directory sys)))))' --quit

buildapp --manifest-file build.manifest --load-system cl-css --load-system cl-who --load-system named-readtables --load-system trivial-gray-streams --load-system closer-mop --load-system sb-bsd-sockets --load-system sb-posix --load-system cl-json --load-system cl-ppcre --load-system cl-base64 --load-system anaphora --load-system alexandria --load-system parenscript --load-system flexi-streams --load-system optima --load-system usocket --load-system bordeaux-threads --load-system cl-fad --load-system local-time --load-system house --load-system fact-base --load-system cl-notebook --eval '(cl-notebook::read-statics)' --output cl-notebook --entry cl-notebook:main
